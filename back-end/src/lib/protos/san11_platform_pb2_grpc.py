# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import san11_platform_pb2 as san11__platform__pb2


class RouteGuideStub(object):
    """Interface exported by the server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePackage = channel.unary_unary(
                '/routeguide.RouteGuide/CreatePackage',
                request_serializer=san11__platform__pb2.CreatePackageRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Package.FromString,
                )
        self.DeletePackage = channel.unary_unary(
                '/routeguide.RouteGuide/DeletePackage',
                request_serializer=san11__platform__pb2.DeletePackageRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Empty.FromString,
                )
        self.UpdatePackage = channel.unary_unary(
                '/routeguide.RouteGuide/UpdatePackage',
                request_serializer=san11__platform__pb2.UpdatePackageRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Package.FromString,
                )
        self.GetPackage = channel.unary_unary(
                '/routeguide.RouteGuide/GetPackage',
                request_serializer=san11__platform__pb2.GetPackageRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Package.FromString,
                )
        self.ListPackages = channel.unary_unary(
                '/routeguide.RouteGuide/ListPackages',
                request_serializer=san11__platform__pb2.ListPackagesRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.ListPackagesResponse.FromString,
                )
        self.SearchPackages = channel.unary_unary(
                '/routeguide.RouteGuide/SearchPackages',
                request_serializer=san11__platform__pb2.SearchPackagesRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.SearchPackagesResponse.FromString,
                )
        self.UploadBinary = channel.unary_unary(
                '/routeguide.RouteGuide/UploadBinary',
                request_serializer=san11__platform__pb2.UploadBinaryRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Status.FromString,
                )
        self.CreateBinary = channel.unary_unary(
                '/routeguide.RouteGuide/CreateBinary',
                request_serializer=san11__platform__pb2.CreateBinaryRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Binary.FromString,
                )
        self.DeleteBinary = channel.unary_unary(
                '/routeguide.RouteGuide/DeleteBinary',
                request_serializer=san11__platform__pb2.DeleteBinaryRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Empty.FromString,
                )
        self.UpdateBinary = channel.unary_unary(
                '/routeguide.RouteGuide/UpdateBinary',
                request_serializer=san11__platform__pb2.UpdateBinaryRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Binary.FromString,
                )
        self.GetBinary = channel.unary_unary(
                '/routeguide.RouteGuide/GetBinary',
                request_serializer=san11__platform__pb2.GetBinaryRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Binary.FromString,
                )
        self.BatchGetBinary = channel.unary_unary(
                '/routeguide.RouteGuide/BatchGetBinary',
                request_serializer=san11__platform__pb2.BatchGetBinaryRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.BatchGetBinaryResponse.FromString,
                )
        self.ListBinaries = channel.unary_unary(
                '/routeguide.RouteGuide/ListBinaries',
                request_serializer=san11__platform__pb2.ListBinariesRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.ListBinariesResponse.FromString,
                )
        self.DownloadBinary = channel.unary_unary(
                '/routeguide.RouteGuide/DownloadBinary',
                request_serializer=san11__platform__pb2.DownloadBinaryRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Binary.FromString,
                )
        self.UploadImage = channel.unary_unary(
                '/routeguide.RouteGuide/UploadImage',
                request_serializer=san11__platform__pb2.UploadImageRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Url.FromString,
                )
        self.CreateImage = channel.unary_unary(
                '/routeguide.RouteGuide/CreateImage',
                request_serializer=san11__platform__pb2.CreateImageRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Url.FromString,
                )
        self.CreateComment = channel.unary_unary(
                '/routeguide.RouteGuide/CreateComment',
                request_serializer=san11__platform__pb2.CreateCommentRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Comment.FromString,
                )
        self.DeleteComment = channel.unary_unary(
                '/routeguide.RouteGuide/DeleteComment',
                request_serializer=san11__platform__pb2.DeleteCommentRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Empty.FromString,
                )
        self.UpdateComment = channel.unary_unary(
                '/routeguide.RouteGuide/UpdateComment',
                request_serializer=san11__platform__pb2.UpdateCommentRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Comment.FromString,
                )
        self.ListComments = channel.unary_unary(
                '/routeguide.RouteGuide/ListComments',
                request_serializer=san11__platform__pb2.ListCommentsRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.ListCommentsResponse.FromString,
                )
        self.CreateReply = channel.unary_unary(
                '/routeguide.RouteGuide/CreateReply',
                request_serializer=san11__platform__pb2.CreateReplyRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Reply.FromString,
                )
        self.DeleteReply = channel.unary_unary(
                '/routeguide.RouteGuide/DeleteReply',
                request_serializer=san11__platform__pb2.DeleteReplyRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Empty.FromString,
                )
        self.UpdateReply = channel.unary_unary(
                '/routeguide.RouteGuide/UpdateReply',
                request_serializer=san11__platform__pb2.UpdateReplyRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Reply.FromString,
                )
        self.SignUp = channel.unary_unary(
                '/routeguide.RouteGuide/SignUp',
                request_serializer=san11__platform__pb2.SignUpRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.SignUpResponse.FromString,
                )
        self.SignIn = channel.unary_unary(
                '/routeguide.RouteGuide/SignIn',
                request_serializer=san11__platform__pb2.SignInRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.SignInResponse.FromString,
                )
        self.SignOut = channel.unary_unary(
                '/routeguide.RouteGuide/SignOut',
                request_serializer=san11__platform__pb2.SignOutRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Status.FromString,
                )
        self.GetUser = channel.unary_unary(
                '/routeguide.RouteGuide/GetUser',
                request_serializer=san11__platform__pb2.GetUserRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.User.FromString,
                )
        self.listUsers = channel.unary_unary(
                '/routeguide.RouteGuide/listUsers',
                request_serializer=san11__platform__pb2.ListUsersRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.ListUsersResponse.FromString,
                )
        self.UpdateUser = channel.unary_unary(
                '/routeguide.RouteGuide/UpdateUser',
                request_serializer=san11__platform__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.User.FromString,
                )
        self.UpdatePassword = channel.unary_unary(
                '/routeguide.RouteGuide/UpdatePassword',
                request_serializer=san11__platform__pb2.UpdatePasswordRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Empty.FromString,
                )
        self.CreateTag = channel.unary_unary(
                '/routeguide.RouteGuide/CreateTag',
                request_serializer=san11__platform__pb2.CreateTagRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Tag.FromString,
                )
        self.DeleteTag = channel.unary_unary(
                '/routeguide.RouteGuide/DeleteTag',
                request_serializer=san11__platform__pb2.DeleteTagRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Empty.FromString,
                )
        self.ListTags = channel.unary_unary(
                '/routeguide.RouteGuide/ListTags',
                request_serializer=san11__platform__pb2.ListTagsRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.ListTagsResponse.FromString,
                )
        self.GetStatistic = channel.unary_unary(
                '/routeguide.RouteGuide/GetStatistic',
                request_serializer=san11__platform__pb2.GetStatisticRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Statistic.FromString,
                )
        self.GetAdminMessage = channel.unary_unary(
                '/routeguide.RouteGuide/GetAdminMessage',
                request_serializer=san11__platform__pb2.GetAdminMessageRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.AdminMessage.FromString,
                )
        self.GetAuth = channel.unary_unary(
                '/routeguide.RouteGuide/GetAuth',
                request_serializer=san11__platform__pb2.GetAuthRequest.SerializeToString,
                response_deserializer=san11__platform__pb2.Auth.FromString,
                )


class RouteGuideServicer(object):
    """Interface exported by the server.
    """

    def CreatePackage(self, request, context):
        """package related
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePackage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePackage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPackage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPackages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchPackages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadBinary(self, request, context):
        """Binary related 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBinary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBinary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBinary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBinary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetBinary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBinaries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadBinary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadImage(self, request, context):
        """Image related
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateComment(self, request, context):
        """comment related
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteComment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateComment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListComments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateReply(self, request, context):
        """rpc UpdateComment(UpdateCommentRequest) returns (Comment) {}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteReply(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateReply(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignUp(self, request, context):
        """User related
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignOut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def listUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTag(self, request, context):
        """Tag related
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTags(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatistic(self, request, context):
        """Generic
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAdminMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAuth(self, request, context):
        """Auth
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RouteGuideServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePackage': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePackage,
                    request_deserializer=san11__platform__pb2.CreatePackageRequest.FromString,
                    response_serializer=san11__platform__pb2.Package.SerializeToString,
            ),
            'DeletePackage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePackage,
                    request_deserializer=san11__platform__pb2.DeletePackageRequest.FromString,
                    response_serializer=san11__platform__pb2.Empty.SerializeToString,
            ),
            'UpdatePackage': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePackage,
                    request_deserializer=san11__platform__pb2.UpdatePackageRequest.FromString,
                    response_serializer=san11__platform__pb2.Package.SerializeToString,
            ),
            'GetPackage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPackage,
                    request_deserializer=san11__platform__pb2.GetPackageRequest.FromString,
                    response_serializer=san11__platform__pb2.Package.SerializeToString,
            ),
            'ListPackages': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPackages,
                    request_deserializer=san11__platform__pb2.ListPackagesRequest.FromString,
                    response_serializer=san11__platform__pb2.ListPackagesResponse.SerializeToString,
            ),
            'SearchPackages': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchPackages,
                    request_deserializer=san11__platform__pb2.SearchPackagesRequest.FromString,
                    response_serializer=san11__platform__pb2.SearchPackagesResponse.SerializeToString,
            ),
            'UploadBinary': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadBinary,
                    request_deserializer=san11__platform__pb2.UploadBinaryRequest.FromString,
                    response_serializer=san11__platform__pb2.Status.SerializeToString,
            ),
            'CreateBinary': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBinary,
                    request_deserializer=san11__platform__pb2.CreateBinaryRequest.FromString,
                    response_serializer=san11__platform__pb2.Binary.SerializeToString,
            ),
            'DeleteBinary': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBinary,
                    request_deserializer=san11__platform__pb2.DeleteBinaryRequest.FromString,
                    response_serializer=san11__platform__pb2.Empty.SerializeToString,
            ),
            'UpdateBinary': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBinary,
                    request_deserializer=san11__platform__pb2.UpdateBinaryRequest.FromString,
                    response_serializer=san11__platform__pb2.Binary.SerializeToString,
            ),
            'GetBinary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBinary,
                    request_deserializer=san11__platform__pb2.GetBinaryRequest.FromString,
                    response_serializer=san11__platform__pb2.Binary.SerializeToString,
            ),
            'BatchGetBinary': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetBinary,
                    request_deserializer=san11__platform__pb2.BatchGetBinaryRequest.FromString,
                    response_serializer=san11__platform__pb2.BatchGetBinaryResponse.SerializeToString,
            ),
            'ListBinaries': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBinaries,
                    request_deserializer=san11__platform__pb2.ListBinariesRequest.FromString,
                    response_serializer=san11__platform__pb2.ListBinariesResponse.SerializeToString,
            ),
            'DownloadBinary': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadBinary,
                    request_deserializer=san11__platform__pb2.DownloadBinaryRequest.FromString,
                    response_serializer=san11__platform__pb2.Binary.SerializeToString,
            ),
            'UploadImage': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadImage,
                    request_deserializer=san11__platform__pb2.UploadImageRequest.FromString,
                    response_serializer=san11__platform__pb2.Url.SerializeToString,
            ),
            'CreateImage': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateImage,
                    request_deserializer=san11__platform__pb2.CreateImageRequest.FromString,
                    response_serializer=san11__platform__pb2.Url.SerializeToString,
            ),
            'CreateComment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateComment,
                    request_deserializer=san11__platform__pb2.CreateCommentRequest.FromString,
                    response_serializer=san11__platform__pb2.Comment.SerializeToString,
            ),
            'DeleteComment': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteComment,
                    request_deserializer=san11__platform__pb2.DeleteCommentRequest.FromString,
                    response_serializer=san11__platform__pb2.Empty.SerializeToString,
            ),
            'UpdateComment': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateComment,
                    request_deserializer=san11__platform__pb2.UpdateCommentRequest.FromString,
                    response_serializer=san11__platform__pb2.Comment.SerializeToString,
            ),
            'ListComments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListComments,
                    request_deserializer=san11__platform__pb2.ListCommentsRequest.FromString,
                    response_serializer=san11__platform__pb2.ListCommentsResponse.SerializeToString,
            ),
            'CreateReply': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateReply,
                    request_deserializer=san11__platform__pb2.CreateReplyRequest.FromString,
                    response_serializer=san11__platform__pb2.Reply.SerializeToString,
            ),
            'DeleteReply': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteReply,
                    request_deserializer=san11__platform__pb2.DeleteReplyRequest.FromString,
                    response_serializer=san11__platform__pb2.Empty.SerializeToString,
            ),
            'UpdateReply': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateReply,
                    request_deserializer=san11__platform__pb2.UpdateReplyRequest.FromString,
                    response_serializer=san11__platform__pb2.Reply.SerializeToString,
            ),
            'SignUp': grpc.unary_unary_rpc_method_handler(
                    servicer.SignUp,
                    request_deserializer=san11__platform__pb2.SignUpRequest.FromString,
                    response_serializer=san11__platform__pb2.SignUpResponse.SerializeToString,
            ),
            'SignIn': grpc.unary_unary_rpc_method_handler(
                    servicer.SignIn,
                    request_deserializer=san11__platform__pb2.SignInRequest.FromString,
                    response_serializer=san11__platform__pb2.SignInResponse.SerializeToString,
            ),
            'SignOut': grpc.unary_unary_rpc_method_handler(
                    servicer.SignOut,
                    request_deserializer=san11__platform__pb2.SignOutRequest.FromString,
                    response_serializer=san11__platform__pb2.Status.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=san11__platform__pb2.GetUserRequest.FromString,
                    response_serializer=san11__platform__pb2.User.SerializeToString,
            ),
            'listUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.listUsers,
                    request_deserializer=san11__platform__pb2.ListUsersRequest.FromString,
                    response_serializer=san11__platform__pb2.ListUsersResponse.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=san11__platform__pb2.UpdateUserRequest.FromString,
                    response_serializer=san11__platform__pb2.User.SerializeToString,
            ),
            'UpdatePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePassword,
                    request_deserializer=san11__platform__pb2.UpdatePasswordRequest.FromString,
                    response_serializer=san11__platform__pb2.Empty.SerializeToString,
            ),
            'CreateTag': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTag,
                    request_deserializer=san11__platform__pb2.CreateTagRequest.FromString,
                    response_serializer=san11__platform__pb2.Tag.SerializeToString,
            ),
            'DeleteTag': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTag,
                    request_deserializer=san11__platform__pb2.DeleteTagRequest.FromString,
                    response_serializer=san11__platform__pb2.Empty.SerializeToString,
            ),
            'ListTags': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTags,
                    request_deserializer=san11__platform__pb2.ListTagsRequest.FromString,
                    response_serializer=san11__platform__pb2.ListTagsResponse.SerializeToString,
            ),
            'GetStatistic': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatistic,
                    request_deserializer=san11__platform__pb2.GetStatisticRequest.FromString,
                    response_serializer=san11__platform__pb2.Statistic.SerializeToString,
            ),
            'GetAdminMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAdminMessage,
                    request_deserializer=san11__platform__pb2.GetAdminMessageRequest.FromString,
                    response_serializer=san11__platform__pb2.AdminMessage.SerializeToString,
            ),
            'GetAuth': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAuth,
                    request_deserializer=san11__platform__pb2.GetAuthRequest.FromString,
                    response_serializer=san11__platform__pb2.Auth.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'routeguide.RouteGuide', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RouteGuide(object):
    """Interface exported by the server.
    """

    @staticmethod
    def CreatePackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/CreatePackage',
            san11__platform__pb2.CreatePackageRequest.SerializeToString,
            san11__platform__pb2.Package.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeletePackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/DeletePackage',
            san11__platform__pb2.DeletePackageRequest.SerializeToString,
            san11__platform__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/UpdatePackage',
            san11__platform__pb2.UpdatePackageRequest.SerializeToString,
            san11__platform__pb2.Package.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/GetPackage',
            san11__platform__pb2.GetPackageRequest.SerializeToString,
            san11__platform__pb2.Package.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPackages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/ListPackages',
            san11__platform__pb2.ListPackagesRequest.SerializeToString,
            san11__platform__pb2.ListPackagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchPackages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/SearchPackages',
            san11__platform__pb2.SearchPackagesRequest.SerializeToString,
            san11__platform__pb2.SearchPackagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadBinary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/UploadBinary',
            san11__platform__pb2.UploadBinaryRequest.SerializeToString,
            san11__platform__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateBinary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/CreateBinary',
            san11__platform__pb2.CreateBinaryRequest.SerializeToString,
            san11__platform__pb2.Binary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteBinary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/DeleteBinary',
            san11__platform__pb2.DeleteBinaryRequest.SerializeToString,
            san11__platform__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBinary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/UpdateBinary',
            san11__platform__pb2.UpdateBinaryRequest.SerializeToString,
            san11__platform__pb2.Binary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBinary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/GetBinary',
            san11__platform__pb2.GetBinaryRequest.SerializeToString,
            san11__platform__pb2.Binary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchGetBinary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/BatchGetBinary',
            san11__platform__pb2.BatchGetBinaryRequest.SerializeToString,
            san11__platform__pb2.BatchGetBinaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBinaries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/ListBinaries',
            san11__platform__pb2.ListBinariesRequest.SerializeToString,
            san11__platform__pb2.ListBinariesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadBinary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/DownloadBinary',
            san11__platform__pb2.DownloadBinaryRequest.SerializeToString,
            san11__platform__pb2.Binary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/UploadImage',
            san11__platform__pb2.UploadImageRequest.SerializeToString,
            san11__platform__pb2.Url.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/CreateImage',
            san11__platform__pb2.CreateImageRequest.SerializeToString,
            san11__platform__pb2.Url.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/CreateComment',
            san11__platform__pb2.CreateCommentRequest.SerializeToString,
            san11__platform__pb2.Comment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/DeleteComment',
            san11__platform__pb2.DeleteCommentRequest.SerializeToString,
            san11__platform__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/UpdateComment',
            san11__platform__pb2.UpdateCommentRequest.SerializeToString,
            san11__platform__pb2.Comment.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListComments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/ListComments',
            san11__platform__pb2.ListCommentsRequest.SerializeToString,
            san11__platform__pb2.ListCommentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateReply(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/CreateReply',
            san11__platform__pb2.CreateReplyRequest.SerializeToString,
            san11__platform__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteReply(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/DeleteReply',
            san11__platform__pb2.DeleteReplyRequest.SerializeToString,
            san11__platform__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateReply(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/UpdateReply',
            san11__platform__pb2.UpdateReplyRequest.SerializeToString,
            san11__platform__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignUp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/SignUp',
            san11__platform__pb2.SignUpRequest.SerializeToString,
            san11__platform__pb2.SignUpResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/SignIn',
            san11__platform__pb2.SignInRequest.SerializeToString,
            san11__platform__pb2.SignInResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/SignOut',
            san11__platform__pb2.SignOutRequest.SerializeToString,
            san11__platform__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/GetUser',
            san11__platform__pb2.GetUserRequest.SerializeToString,
            san11__platform__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def listUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/listUsers',
            san11__platform__pb2.ListUsersRequest.SerializeToString,
            san11__platform__pb2.ListUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/UpdateUser',
            san11__platform__pb2.UpdateUserRequest.SerializeToString,
            san11__platform__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/UpdatePassword',
            san11__platform__pb2.UpdatePasswordRequest.SerializeToString,
            san11__platform__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/CreateTag',
            san11__platform__pb2.CreateTagRequest.SerializeToString,
            san11__platform__pb2.Tag.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/DeleteTag',
            san11__platform__pb2.DeleteTagRequest.SerializeToString,
            san11__platform__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/ListTags',
            san11__platform__pb2.ListTagsRequest.SerializeToString,
            san11__platform__pb2.ListTagsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatistic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/GetStatistic',
            san11__platform__pb2.GetStatisticRequest.SerializeToString,
            san11__platform__pb2.Statistic.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAdminMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/GetAdminMessage',
            san11__platform__pb2.GetAdminMessageRequest.SerializeToString,
            san11__platform__pb2.AdminMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAuth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/routeguide.RouteGuide/GetAuth',
            san11__platform__pb2.GetAuthRequest.SerializeToString,
            san11__platform__pb2.Auth.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
