# Remove https related setup for testing purpose.
version: "3"

services:
  back-end:
    build: ./back-end
    restart: always
    working_dir: /app
    volumes:
      - ./back-end/src:/app
      - ./back-end/utils:/utils
      - ../credentials:/credentials
    environment:
      STAGE: DEV
      DB_HOST: db
    command:
      [
        "/utils/wait-for-postgres.sh",
        "db",
        "python3.8",
        "san11_platform_server.py",
        "--verbose",
      ]
    depends_on:
      - db

  gateway:
    build: ./back-end/gateway
    restart: always
    working_dir: /app
    command: go run main.go
    depends_on:
      - back-end
    ports:
      - "8081:8081"

  envoy:
    image: envoyproxy/envoy-alpine:v1.21.6
    restart: always
    volumes:
      - ./back-end/envoy:/etc/envoy
      - ../credentials:/credentials
    command: /usr/local/bin/envoy -c /etc/envoy/envoy_dev.yaml
    ports:
      - "8090:8090"
      - "80:80"
    depends_on:
      - back-end

  db:
    build: ./database
    restart: always
    volumes:
      - ./database/postgres-data:/var/lib/postgresql/data
      - ./database/backup:/backup
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example

  front-end:
    build:
      context: ./front-end
      dockerfile: Dockerfile.dev
    restart: always
    working_dir: /app
    environment:
      - NODE_OPTIONS=--max-old-space-size=4096
    volumes:
      # Map the source code to the container so that changes will trigger a rebuild.
      - ./front-end/src:/app/src
    command: bash -c "npx ng serve --host 0.0.0.0 --disable-host-check"
    depends_on:
      - back-end
    ports:
      - "4200:4200"
